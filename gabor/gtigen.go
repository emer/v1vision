// Code generated by "goki generate -add-types"; DO NOT EDIT.

package gabor

import (
	"goki.dev/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/vision/v2/gabor.Filter", IDName: "filter", Doc: "gabor.Filter specifies a gabor filter function,\ni.e., a 2d Gaussian envelope times a sinusoidal plane wave.\nBy default it produces 2 phase asymmetric edge detector filters.", Fields: []gti.Field{{Name: "On", Doc: "is this filter active?"}, {Name: "Wt", Doc: "how much relative weight does this filter have when combined with other filters"}, {Name: "Gain", Doc: "overall gain multiplier applied after filtering -- only relevant if not using renormalization (otherwize it just gets renormed away)"}, {Name: "Size", Doc: "size of the overall filter -- number of pixels wide and tall for a square matrix used to encode the filter -- filter is centered within this square -- typically an even number, min effective size ~6"}, {Name: "WvLen", Doc: "wavelength of the sine waves -- number of pixels over which a full period of the wave takes place -- typically same as Size (computation adds a 2 PI factor to translate into pixels instead of radians)"}, {Name: "Spacing", Doc: "how far apart to space the centers of the gabor filters -- 1 = every pixel, 2 = every other pixel, etc -- high-res should be 1 or 2, lower res can be increments therefrom"}, {Name: "SigLen", Doc: "gaussian sigma for the length dimension (elongated axis perpendicular to the sine waves) -- as a normalized proportion of filter Size"}, {Name: "SigWd", Doc: "gaussian sigma for the width dimension (in the direction of the sine waves) -- as a normalized proportion of filter size"}, {Name: "Phase", Doc: "phase offset for the sine wave, in degrees -- 0 = asymmetric sine wave, 90 = symmetric cosine wave"}, {Name: "CircleEdge", Doc: "cut off the filter (to zero) outside a circle of diameter = Size -- makes the filter more radially symmetric"}, {Name: "NAngles", Doc: "number of different angles of overall gabor filter orientation to use -- first angle is always horizontal"}}})
