// Code generated by "goki generate -add-types"; DO NOT EDIT.

package main

import (
	"goki.dev/gti"
)

var _ = gti.AddType(&gti.Type{Name: "main.V1Img", IDName: "v-1-img", Doc: "Img manages conversion of a bitmap image into tensor formats for\nsubsequent processing by filters.", Directives: []gti.Directive{{Tool: "gti", Directive: "add"}}, Methods: []gti.Method{{Name: "OpenImage", Doc: "OpenImage opens given filename as current image Img\nand converts to a float32 tensor for processing", Directives: []gti.Directive{{Tool: "gti", Directive: "add"}}, Args: []string{"filepath", "filtsz"}, Returns: []string{"error"}}}, Fields: []gti.Field{{Name: "File", Doc: "name of image file to operate on"}, {Name: "Size", Doc: "target image size to use -- images will be rescaled to this size"}, {Name: "Img", Doc: "current input image"}, {Name: "Tsr", Doc: "input image as an RGB tensor"}, {Name: "LMS", Doc: "LMS components + opponents tensor version of image"}}})

var _ = gti.AddType(&gti.Type{Name: "main.V1sOut", IDName: "v-1-s-out", Doc: "V1sOut contains output tensors for V1 Simple filtering, one per opponnent", Directives: []gti.Directive{{Tool: "gti", Directive: "add"}}, Fields: []gti.Field{{Name: "Tsr", Doc: "V1 simple gabor filter output tensor"}, {Name: "ExtGiTsr", Doc: "V1 simple extra Gi from neighbor inhibition tensor"}, {Name: "KwtaTsr", Doc: "V1 simple gabor filter output, kwta output tensor"}, {Name: "PoolTsr", Doc: "V1 simple gabor filter output, max-pooled 2x2 of Kwta tensor"}}})

var _ = gti.AddType(&gti.Type{Name: "main.Vis", IDName: "vis", Doc: "Vis encapsulates specific visual processing pipeline in\nuse in a given case -- can add / modify this as needed.\nHandles 3 major opponent channels: WhiteBlack, RedGreen, BlueYellow", Directives: []gti.Directive{{Tool: "gti", Directive: "add"}}, Methods: []gti.Method{{Name: "Filter", Doc: "Filter is overall method to run filters on current image file name\nloads the image from ImageFile and then runs filters", Directives: []gti.Directive{{Tool: "gti", Directive: "add"}}, Returns: []string{"error"}}}, Fields: []gti.Field{{Name: "Color", Doc: "if true, do full color filtering -- else Black/White only"}, {Name: "SepColor", Doc: "record separate rows in V1s summary for each color -- otherwise just records the max across all colors"}, {Name: "ColorGain", Doc: "extra gain for color channels -- lower contrast in general"}, {Name: "Img", Doc: "image that we operate upon -- one image often shared among multiple filters"}, {Name: "V1sGabor", Doc: "V1 simple gabor filter parameters"}, {Name: "V1sGeom", Doc: "geometry of input, output for V1 simple-cell processing"}, {Name: "V1sNeighInhib", Doc: "neighborhood inhibition for V1s -- each unit gets inhibition from same feature in nearest orthogonal neighbors -- reduces redundancy of feature code"}, {Name: "V1sKWTA", Doc: "kwta parameters for V1s"}, {Name: "V1sGaborTsr", Doc: "V1 simple gabor filter tensor"}, {Name: "V1sGaborTab", Doc: "V1 simple gabor filter table (view only)"}, {Name: "V1s", Doc: "V1 simple gabor filter output, per channel"}, {Name: "V1sMaxTsr", Doc: "max over V1 simple gabor filters output tensor"}, {Name: "V1sPoolTsr", Doc: "V1 simple gabor filter output, max-pooled 2x2 of Kwta tensor"}, {Name: "V1sUnPoolTsr", Doc: "V1 simple gabor filter output, un-max-pooled 2x2 of Pool tensor"}, {Name: "ImgFmV1sTsr", Doc: "input image reconstructed from V1s tensor"}, {Name: "V1sAngOnlyTsr", Doc: "V1 simple gabor filter output, angle-only features tensor"}, {Name: "V1sAngPoolTsr", Doc: "V1 simple gabor filter output, max-pooled 2x2 of AngOnly tensor"}, {Name: "V1cLenSumTsr", Doc: "V1 complex length sum filter output tensor"}, {Name: "V1cEndStopTsr", Doc: "V1 complex end stop filter output tensor"}, {Name: "V1AllTsr", Doc: "Combined V1 output tensor with V1s simple as first two rows, then length sum, then end stops = 5 rows total (9 if SepColor)"}, {Name: "V1sInhibs", Doc: "inhibition values for V1s KWTA"}}})
