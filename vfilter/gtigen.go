// Code generated by "goki generate ./..."; DO NOT EDIT.

package vfilter

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/vfilter.Geom",
	ShortName:  "vfilter.Geom",
	IDName:     "geom",
	Doc:        "Geom contains the filtering geometry info for a given filter pass.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"In", &gti.Field{Name: "In", Type: "image.Point", LocalType: "image.Point", Doc: "size of input -- computed from image or set", Directives: gti.Directives{}, Tag: ""}},
		{"Out", &gti.Field{Name: "Out", Type: "image.Point", LocalType: "image.Point", Doc: "size of output -- computed", Directives: gti.Directives{}, Tag: ""}},
		{"Border", &gti.Field{Name: "Border", Type: "image.Point", LocalType: "image.Point", Doc: "starting border into image -- must be >= FiltRt", Directives: gti.Directives{}, Tag: ""}},
		{"Spacing", &gti.Field{Name: "Spacing", Type: "image.Point", LocalType: "image.Point", Doc: "spacing -- number of pixels to skip in each direction", Directives: gti.Directives{}, Tag: ""}},
		{"FiltSz", &gti.Field{Name: "FiltSz", Type: "image.Point", LocalType: "image.Point", Doc: "full size of filter", Directives: gti.Directives{}, Tag: ""}},
		{"FiltLt", &gti.Field{Name: "FiltLt", Type: "image.Point", LocalType: "image.Point", Doc: "computed size of left/top size of filter", Directives: gti.Directives{}, Tag: ""}},
		{"FiltRt", &gti.Field{Name: "FiltRt", Type: "image.Point", LocalType: "image.Point", Doc: "computed size of right/bottom size of filter (FiltSz - FiltLeft)", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
