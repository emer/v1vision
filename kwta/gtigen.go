// Code generated by "goki generate ./..."; DO NOT EDIT.

package kwta

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/kwta.Chans",
	ShortName:  "kwta.Chans",
	IDName:     "chans",
	Doc:        "Chans are ion channels used in computing point-neuron activation function",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"E", &gti.Field{Name: "E", Type: "float32", LocalType: "float32", Doc: "excitatory sodium (Na) AMPA channels activated by synaptic glutamate", Directives: gti.Directives{}, Tag: ""}},
		{"L", &gti.Field{Name: "L", Type: "float32", LocalType: "float32", Doc: "constant leak (potassium, K+) channels -- determines resting potential (typically higher than resting potential of K)", Directives: gti.Directives{}, Tag: ""}},
		{"I", &gti.Field{Name: "I", Type: "float32", LocalType: "float32", Doc: "inhibitory chloride (Cl-) channels activated by synaptic GABA", Directives: gti.Directives{}, Tag: ""}},
		{"K", &gti.Field{Name: "K", Type: "float32", LocalType: "float32", Doc: "gated / active potassium channels -- typically hyperpolarizing relative to leak / rest", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/kwta.KWTA",
	ShortName:  "kwta.KWTA",
	IDName:     "kwta",
	Doc:        "KWTA contains all the parameters needed for computing FFFB\n(feedforward & feedback) inhibition that results in roughly\nk-Winner-Take-All behavior.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"On", &gti.Field{Name: "On", Type: "bool", LocalType: "bool", Doc: "whether to run kWTA or not", Directives: gti.Directives{}, Tag: ""}},
		{"Iters", &gti.Field{Name: "Iters", Type: "int", LocalType: "int", Doc: "maximum number of iterations to perform", Directives: gti.Directives{}, Tag: ""}},
		{"DelActThr", &gti.Field{Name: "DelActThr", Type: "float32", LocalType: "float32", Doc: "threshold on delta-activation (change in activation) for stopping updating of activations", Directives: gti.Directives{}, Tag: "def:\"0.005\""}},
		{"LayFFFB", &gti.Field{Name: "LayFFFB", Type: "github.com/emer/vision/v2/fffb.Params", LocalType: "fffb.Params", Doc: "layer-level feedforward & feedback inhibition -- applied over entire set of values", Directives: gti.Directives{}, Tag: "view:\"inline\""}},
		{"PoolFFFB", &gti.Field{Name: "PoolFFFB", Type: "github.com/emer/vision/v2/fffb.Params", LocalType: "fffb.Params", Doc: "pool-level (feature groups) feedforward and feedback inhibition -- applied within inner-most dimensions inside outer 2 dimensions (if Pool method is called)", Directives: gti.Directives{}, Tag: "view:\"inline\""}},
		{"XX1", &gti.Field{Name: "XX1", Type: "github.com/emer/vision/v2/nxx1.Params", LocalType: "nxx1.Params", Doc: "Noisy X/X+1 rate code activation function parameters", Directives: gti.Directives{}, Tag: "view:\"inline\""}},
		{"ActTau", &gti.Field{Name: "ActTau", Type: "float32", LocalType: "float32", Doc: "time constant for integrating activation", Directives: gti.Directives{}, Tag: "def:\"3\""}},
		{"Gbar", &gti.Field{Name: "Gbar", Type: "github.com/emer/vision/v2/kwta.Chans", LocalType: "Chans", Doc: "maximal conductances levels for channels", Directives: gti.Directives{}, Tag: "view:\"inline\""}},
		{"Erev", &gti.Field{Name: "Erev", Type: "github.com/emer/vision/v2/kwta.Chans", LocalType: "Chans", Doc: "reversal potentials for each channel", Directives: gti.Directives{}, Tag: "view:\"inline\""}},
		{"ErevSubThr", &gti.Field{Name: "ErevSubThr", Type: "github.com/emer/vision/v2/kwta.Chans", LocalType: "Chans", Doc: "Erev - Act.Thr for each channel -- used in computing GeThrFmG among others", Directives: gti.Directives{}, Tag: "inactive:\"+\" view:\"-\""}},
		{"ThrSubErev", &gti.Field{Name: "ThrSubErev", Type: "github.com/emer/vision/v2/kwta.Chans", LocalType: "Chans", Doc: "Act.Thr - Erev for each channel -- used in computing GeThrFmG among others", Directives: gti.Directives{}, Tag: "inactive:\"+\" view:\"-\" json:\"-\" xml:\"-\""}},
		{"ActDt", &gti.Field{Name: "ActDt", Type: "float32", LocalType: "float32", Doc: "", Directives: gti.Directives{}, Tag: "view:\"-\"; json\"-\" xml\"-\" desc:\"integration rate = 1/ tau\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/kwta.NeighInhib",
	ShortName:  "kwta.NeighInhib",
	IDName:     "neigh-inhib",
	Doc:        "NeighInhib adds an additional inhibition factor based on the same\nfeature along an orthogonal angle -- assumes inner-most X axis\nrepresents angle of gabor or related feature.\nThis helps reduce redundancy of feature code.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"On", &gti.Field{Name: "On", Type: "bool", LocalType: "bool", Doc: "use neighborhood inhibition", Directives: gti.Directives{}, Tag: ""}},
		{"Gi", &gti.Field{Name: "Gi", Type: "float32", LocalType: "float32", Doc: "overall value of the inhibition -- this is what is added into the unit Gi inhibition level", Directives: gti.Directives{}, Tag: "def:\"0.6\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
