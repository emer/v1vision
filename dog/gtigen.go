// Code generated by "core generate -add-types"; DO NOT EDIT.

package dog

import (
	"cogentcore.org/core/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/vision/v2/dog.Filter", IDName: "filter", Doc: "dog.Filter specifies a DoG Difference of Gaussians filter function.", Fields: []gti.Field{{Name: "On", Doc: "is this filter active?"}, {Name: "Wt", Doc: "how much relative weight does this filter have when combined with other filters"}, {Name: "Gain", Doc: "overall gain multiplier applied after dog filtering -- only relevant if not using renormalization (otherwize it just gets renormed away)"}, {Name: "OnGain", Doc: "gain for the on component of filter, only relevant for color-opponent DoG's"}, {Name: "Size", Doc: "size of the overall filter -- number of pixels wide and tall for a square matrix used to encode the filter -- filter is centered within this square -- typically an even number, min effective size ~6"}, {Name: "Spacing", Doc: "how far apart to space the centers of the dog filters -- 1 = every pixel, 2 = every other pixel, etc -- high-res should be 1 or 2, lower res can be increments therefrom"}, {Name: "OnSig", Doc: "gaussian sigma for the narrower On gaussian, in normalized units relative to Size"}, {Name: "OffSig", Doc: "gaussian sigma for the wider Off gaussian, in normalized units relative to Size"}, {Name: "CircleEdge", Doc: "cut off the filter (to zero) outside a circle of diameter = Size -- makes the filter more radially symmetric"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/vision/v2/dog.Filters", IDName: "filters", Doc: "Filters is the type of filter"})
