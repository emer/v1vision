// Code generated by "goki generate ./..."; DO NOT EDIT.

package dog

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/dog.Filter",
	ShortName:  "dog.Filter",
	IDName:     "filter",
	Doc:        "dog.Filter specifies a DoG Difference of Gaussians filter function.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"On", &gti.Field{Name: "On", Type: "bool", LocalType: "bool", Doc: "is this filter active?", Directives: gti.Directives{}, Tag: ""}},
		{"Wt", &gti.Field{Name: "Wt", Type: "float32", LocalType: "float32", Doc: "how much relative weight does this filter have when combined with other filters", Directives: gti.Directives{}, Tag: "viewif:\"On\""}},
		{"Gain", &gti.Field{Name: "Gain", Type: "float32", LocalType: "float32", Doc: "overall gain multiplier applied after dog filtering -- only relevant if not using renormalization (otherwize it just gets renormed away)", Directives: gti.Directives{}, Tag: "viewif:\"On\" def:\"8\""}},
		{"OnGain", &gti.Field{Name: "OnGain", Type: "float32", LocalType: "float32", Doc: "gain for the on component of filter, only relevant for color-opponent DoG's", Directives: gti.Directives{}, Tag: "viewif:\"On\" def:\"1\""}},
		{"Size", &gti.Field{Name: "Size", Type: "int", LocalType: "int", Doc: "size of the overall filter -- number of pixels wide and tall for a square matrix used to encode the filter -- filter is centered within this square -- typically an even number, min effective size ~6", Directives: gti.Directives{}, Tag: "viewif:\"On\""}},
		{"Spacing", &gti.Field{Name: "Spacing", Type: "int", LocalType: "int", Doc: "how far apart to space the centers of the dog filters -- 1 = every pixel, 2 = every other pixel, etc -- high-res should be 1 or 2, lower res can be increments therefrom", Directives: gti.Directives{}, Tag: "viewif:\"On\""}},
		{"OnSig", &gti.Field{Name: "OnSig", Type: "float32", LocalType: "float32", Doc: "gaussian sigma for the narrower On gaussian, in normalized units relative to Size", Directives: gti.Directives{}, Tag: "viewif:\"On\" def:\"0.125\""}},
		{"OffSig", &gti.Field{Name: "OffSig", Type: "float32", LocalType: "float32", Doc: "gaussian sigma for the wider Off gaussian, in normalized units relative to Size", Directives: gti.Directives{}, Tag: "viewif:\"On\" def:\"0.25\""}},
		{"CircleEdge", &gti.Field{Name: "CircleEdge", Type: "bool", LocalType: "bool", Doc: "cut off the filter (to zero) outside a circle of diameter = Size -- makes the filter more radially symmetric", Directives: gti.Directives{}, Tag: "viewif:\"On\" def:\"true\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "github.com/emer/vision/v2/dog.Filters",
	ShortName:  "dog.Filters",
	IDName:     "filters",
	Doc:        "Filters is the type of filter",
	Directives: gti.Directives{},

	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
