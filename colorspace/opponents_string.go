// Code generated by "stringer -type=Opponents"; DO NOT EDIT.

package colorspace

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[WhiteBlack-0]
	_ = x[RedGreen-1]
	_ = x[BlueYellow-2]
	_ = x[OpponentsN-3]
}

const _Opponents_name = "WhiteBlackRedGreenBlueYellowOpponentsN"

var _Opponents_index = [...]uint8{0, 10, 18, 28, 38}

func (i Opponents) String() string {
	if i < 0 || i >= Opponents(len(_Opponents_index)-1) {
		return "Opponents(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opponents_name[_Opponents_index[i]:_Opponents_index[i+1]]
}

func (i *Opponents) FromString(s string) error {
	for j := 0; j < len(_Opponents_index)-1; j++ {
		if s == _Opponents_name[_Opponents_index[j]:_Opponents_index[j+1]] {
			*i = Opponents(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Opponents")
}
